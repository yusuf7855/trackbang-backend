// routes/notificationRoutes.js - Bu dosyayÄ± gÃ¼ncelleyin:

const express = require('express');
const router = express.Router();
const notificationController = require('../controllers/notificationController');
const authMiddleware = require('../middlewares/authMiddleware');

// Request logging iÃ§in middleware
router.use((req, res, next) => {
  console.log(`ðŸ”” Notification Route: ${req.method} ${req.originalUrl}`);
  next();
});

// ============ PUBLIC ROUTES (Test iÃ§in) ============

// Health check
router.get('/health', (req, res) => {
  console.log('âœ… Health check Ã§alÄ±ÅŸtÄ±');
  res.json({
    success: true,
    message: 'Notification service is running',
    timestamp: new Date().toISOString(),
    routes: [
      'GET /health',
      'POST /send', 
      'GET /history',
      'GET /stats',  // DÃ¼zeltildi: admin/ prefix kaldÄ±rÄ±ldÄ±
      'GET /admin/stats'  // Her iki endpoint de mevcut
    ]
  });
});

// ============ ADMIN PANEL ROUTES ============

// Push bildirim gÃ¶nderme (Admin)
router.post('/send', (req, res, next) => {
  console.log('ðŸ“¤ Send notification endpoint Ã§aÄŸrÄ±ldÄ±');
  next();
}, notificationController.sendNotification);

// Bildirim geÃ§miÅŸini getirme (Admin)  
router.get('/history', (req, res, next) => {
  console.log('ðŸ“‹ History endpoint Ã§aÄŸrÄ±ldÄ±');
  next();
}, notificationController.getNotificationHistory);

// Ä°statistikleri getirme (Admin) - Ä°ki farklÄ± endpoint
router.get('/stats', (req, res, next) => {
  console.log('ðŸ“Š Stats endpoint Ã§aÄŸrÄ±ldÄ± (kÄ±sa)');
  next();
}, notificationController.getNotificationStats);

router.get('/admin/stats', (req, res, next) => {
  console.log('ðŸ“Š Admin stats endpoint Ã§aÄŸrÄ±ldÄ± (uzun)');
  next();
}, notificationController.getNotificationStats);

// ============ MOBIL UYGULAMA ROUTES ============

// FCM token kaydetme/gÃ¼ncelleme
router.post('/register-token', authMiddleware, notificationController.registerDeviceToken);

// KullanÄ±cÄ±nÄ±n bildirimlerini getirme
router.get('/user', authMiddleware, notificationController.getUserNotifications);

// Bildirim ayarlarÄ±nÄ± gÃ¼ncelleme
router.put('/settings', authMiddleware, notificationController.updateNotificationSettings);

// Cihaz token'Ä±nÄ± deaktive etme
router.post('/deactivate-token', authMiddleware, notificationController.deactivateDeviceToken);

module.exports = router;